import java.util.*;
import java.util.Scanner;

public class Main8 {
/* Initializing arrays with input values.

	public static void main (String [] args) {
		Scanner input = new Scanner(System.in);
		int [][] matrix = new int[2][2];
		
		
		 System.out.println("Enter " + matrix.length + " rows and " +
				  matrix[0].length + " columns: ");
				 for (int row = 0; row < matrix.length; row++) {
				 for (int column = 0; column < matrix[row].length; column++) {
				    matrix[row][column] = input.nextInt();
	    
				  }
				 }
				System.out.println(Arrays.deepToString(matrix));
*/

/* Initializing arrays with random values.

	int [][] matrix = new int[2][2];
		
		for(int row = 0; row < matrix.length; row++) {
			for(int column = 0; column < matrix [row].length; column++) {
				matrix[row][column] = (int) (Math.random() * 100);
				
			}
			
		}
		
		System.out.println(Arrays.deepToString(matrix));		
*/
    /*
      Printing arrays
        int [][] testArray = new int[5][5];
        
        for (int row = 0; row < testArray.length; row++) {
            for(int column = 0; column < testArray[row].length; column++) {
            	testArray[row][column] = row + column + 1; 
            	System.out.print(testArray[row][column] + " ");
            }
           System.out.println();
        }
    }
}

*/
Sum of elements 

import java.util.*;
import java.util.Scanner;

public class Main8 {
    public static void main (String [] args) {
    	
    	int [][] testArray = {{1,2,3}, {1,2,3,4}, {1,2,3}};
    	int total = 0;
    	for (int row = 0; row < testArray.length; row++) {
    		for (int column = 0; column < testArray[row].length; column++) {
    			
    			total += testArray[row][column];
    		}
    	}
    	
    	System.out.println(total);
 	
    }
}

    	/*
      Finding highest sum in the rows.
    	int [][] testArray = {{1,2,3}, {1,2,3,4}, {1,2,3,4,5}};
    	int maxRow = 0;
    	int maxIndexRow = 0;
    	
    	for(int column = 0; column < testArray[0].length; column++) {
    		maxRow += testArray[0][column];
    	}
    	
    	for(int row = 1; row < testArray.length; row++) {
    		int totalThisRow = 0;
    		for(int column = 0; column < testArray[row].length; column++) {
    			totalThisRow += testArray[row][column];
    		}
    		
    		if(totalThisRow > maxRow) {
    			maxRow = totalThisRow;
    			maxIndexRow = row;
    		}
    	}
    	
    	System.out.println("Row " + (maxIndexRow + 1) + " contains the highest sum of elements with a sum of " + maxRow);
    	
  
    }
}
     	/*

      Shuffling
    	int [][] matrix = {{1,2,3}, {3,4,2}};
    	 for (int i = 0; i < matrix.length; i++) {
    		 for (int j = 0; j < matrix[i].length; j++) {
    		 int i1 = (int)(Math.random() * matrix.length);
    		 int j1 = (int)(Math.random() * matrix[i].length);
    		 // Swap matrix[i][j] with matrix[i1][j1]
    		
    		    int temp = matrix[i][j];
    		    matrix[i][j] = matrix[i1][j1]; 
    		    matrix[i1][j1] = temp;
    		  }
    		 }
    	 
    	 System.out.println(Arrays.deepToString(matrix));
    	 
    	 
    }
}
*/
  
 
	
	
	
	
	
